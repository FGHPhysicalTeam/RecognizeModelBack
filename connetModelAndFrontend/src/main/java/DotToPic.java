import javax.imageio.ImageIO;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Arrays;


public class DotToPic {
    GlobalVariable globalVariable = new GlobalVariable();
    String picAddress = globalVariable.getPicAddress();
    public void dottopic(String dotlistx, String dotlisty) {
//        File f = new File(picAddress);
//        if(f.exists()){
//            f.delete();
//        }
        int[] xPoint, yPoint;
        int xMax, yMax, xMin, yMin, size;
        int[][] pic;
        BufferedImage img;
        String[] points;

//        System.out.println("dotlistx: " + dotlistx);
//        System.out.println("dotlisty: " + dotlisty);
        // dotlistx = "437,437,437,437,437,437,437,437,438,438,438,438,439,439,439,439,439,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,441,441,441,441,441,441,441,441,441,441,441,441,441,441,442,442,442,442,442,442,443,443,443,444,444,445,445,446,446,447,447,447,447,448,448,448,448,448,448,448,448,449,449,449,449,450,450,450,450,450,450,451,451,451,451,451,451,451,451,451,451,451,451,451,452,452,452,452,452,453,453,453,453,454,454,455,455,455,455,456,456,456,456,456,456,456,457,457,457,457,457,457,457,457,457,457,458,458,458,458,458,459,459,459,460,460,460,460,461,461,461,461,461,462,462,462,462,462,463,463,463,463,463,464,464,464,464,465,465,465,465,465,466,466,466,466,467,467,467,468,468,469,469,469,469,470,470,470,470,470,470,470,471,471,471,471,471,471,471,471,471,472,472,472,472,472,473,473,473,474,474,475,475,476,476,476,477,477,477,477,478,478,478,478,478,478,478,478,478,478,478,479,479,479,479,480,480,480,480,481,481,481,481,481,481,482,482,482,482,482,482,482,482,483,483,483,483,483,484,484,485,485,486,486,486,487,487,487,487,487,487,487,487,487,488,488,488,488,488,489,489,489,489,489,490,490,490,490,490,490,490,490,490,491,491,491,492,492,492,493,493,494,494,494,494,495,495,495,495,495,495,495,495,495,496,496,496,496,497,497,497,498,499,499,500,501,501,501,501,502,502,502,502,502,502,502,503,503,503,503,503,504,504,504,504,505,505,505,505,505,506,506,506,506,506,506,506,507,507,507,507,507,508,508,508,509,509,509,509,510,511,511,512,512,513,513,513,514,514,514,514,514,514,514,514,514,514,514,515,515,515,515,515,515,516,516,516,516,516,516,516,516,516,516,517,517,519,520,521,522,523,523,524,524,525,525,525,525,525,525,524,524,523,471,471,472,472,472,473,473,474,474,474,474,475,475,476,476,476,477,477,477,477,478,478,478,479,480,480,481,481,482,482,482,483,483,483,483,484,484,484,485,486,487,487,488,489,489,490,491,491,492,492,493,493,494,494,494,494,495,495,495,496,496,496,497,498,498,499,499,500,500,500,501,501,501,501,502,502,502,502,502,503,503,503,503,503,504,504,504,505,506,506,506,507,507,507,507,508,508,508,509,509,509,509,509,510,510,510,510,511,511,512,512,513,513,513,514,514,515,515,515,515,516,516,516,516,517,517,517,518,518,518,518,519,519,520,520,520,520,521,521,521,521,522,522,522,522,522,522,523,523,523,523,524,525,526,527,528,529,529,529,530,530,530,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,";
        // dotlisty = "529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,529,529,222,222,222,222,221,221,221,220,220,220,220,220,220,220,220,220,220,219,219,219,219,219,218,218,218,218,218,217,217,217,217,216,216,216,216,215,215,215,215,214,214,214,214,213,213,213,213,212,212,212,212,211,211,210,210,210,209,208,208,207,206,206,205,205,205,204,204,204,204,204,203,203,203,203,202,202,202,202,202,201,201,201,201,201,201,201,201,200,200,200,200,200,199,199,199,199,199,198,198,198,198,197,197,196,196,195,195,194,194,193,193,193,192,192,192,192,192,191,191,191,191,191,191,190,190,190,190,190,189,189,189,188,188,187,187,186,185,185,184,183,183,183,183,182,182,182,182,181,180,180,180,179,179,179,178,178,178,177,177,176,176,176,176,176,175,175,175,175,174,174,173,173,172,171,171,171,170,170,170,170,170,169,169,169,169,169,168,168,168,168,168,167,167,167,167,166,166,166,165,165,164,164,163,162,161,161,160,160,159,158,158,158,158,158,157,157,157,157,157,156,156,156,156,156,156,155,155,154,154,154,153,153,153,152,152,152,152,152,151,151,151,151,151,151,150,150,150,149,149,148,148,147,146,145,145,144,144,143,143,143,143,142,142,142,142,142,141,141,141,141,140,140,139,139,139,138,138,138,137,137,137,137,137,136,136,135,135,134,134,133,133,132,131,131,130,130,129,129,128,128,128,128,127,127,127,127,127,126,126,126,125,125,124,123,122,121,120,119,118,117,117,116,116,116,116,115,115,115,115,115,114,114,114,113,113,112,112,111,111,110,110,110,110,109,109,109,109,108,108,108,107,107,107,106,106,106,105,105,105,104,103,102,102,101,100,99,98,98,98,97,97,97,97,97,96,96,96,96,95,95,95,94,94,94,94,93,93,93,93,92,92,92,92,92,91,91,90,89,88,86,84,83,82,80,80,79,78,78,78,78,77,77,77,77,77,78,112,111,111,111,110,110,110,109,109,109,108,108,108,107,107,107,106,106,106,105,105,105,104,104,103,103,102,102,101,101,101,101,101,100,100,100,100,99,99,98,98,97,97,96,95,95,95,94,94,93,93,93,93,92,92,92,92,92,91,91,90,90,90,90,89,89,88,88,88,87,87,87,87,87,87,87,87,87,86,86,86,86,86,86,85,85,85,84,84,84,83,83,83,83,83,83,82,82,82,82,82,82,82,81,81,81,81,80,80,80,79,79,78,78,78,78,78,78,77,77,77,77,77,76,76,76,76,75,75,75,74,74,74,74,74,73,73,73,73,73,73,73,73,73,72,72,72,72,72,72,71,71,70,69,68,68,67,67,67,67,67,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,71,71,71,72,72,72,73,73,73,73,74,74,74,74,75,75,75,75,75,76,76,76,76,77,77,77,77,78,78,78,78,79,79,79,79,80,80,80,81,81,81,81,81,82,82,82,83,83,83,83,84,84,85,85,86,86,86,87,87,88,88,89,89,90,91,91,92,93,93,94,94,95,96,96,97,97,97,98,98,99,99,100,100,101,101,101,102,102,102,103,103,103,103,104,104,104,105,105,105,105,106,106,106,107,107,107,107,108,108,108,108,109,109,109,109,110,110,110,111,111,111,111,112,112,112,113,113,113,113,114,114,114,115,115,115,116,116,116,116,117,117,117,117,118,118,118,118,119,119,119,119,120,120,120,120,121,121,121,121,122,122,122,123,123,123,124,124,124,124,125,125,125,125,126,125,123,122,";

        try {
            points = dotlistx.split(",");
            xPoint = new int[points.length];
            for (int i = 0; i < xPoint.length; i++)
                xPoint[i] = Integer.parseInt(points[i]);
            points = dotlisty.split(",");
            yPoint = new int[points.length];
            for (int i = 0; i < yPoint.length; i++)
                yPoint[i] = Integer.parseInt(points[i]);

            xMax = yMax = 0;
            xMin = xPoint[0];
            yMin = yPoint[0];
            for (int x : xPoint) {
                xMax = Math.max(x, xMax);
                xMin = Math.min(x, xMin);
            }
            for (int y : yPoint) {
                yMax = Math.max(y, yMax);
                yMin = Math.min(y, yMin);
            }
            size = Math.max(xMax - xMin + 1, yMax - yMin + 1);

            pic = new int[28][28];
            for (int i = 0; i < xPoint.length; i++)
                pic[(xPoint[i] - xMax + size - 1) * 28 / size][(yPoint[i] - yMax + size - 1) * 28 / size] = 255;
            img = new BufferedImage(28, 28, BufferedImage.TYPE_INT_RGB);
            for (int i = 0; i < 28; i++)
                for (int j = 0; j < 28; j++)
                    img.setRGB(i, j, new Color(pic[i][j], pic[i][j], pic[i][j]).getRGB());
//            ImageIO.write(img, "png", new File("D:\\ideaProjects\\untitled_1\\src\\pic\\test.png"));
            ImageIO.write(img, "png", new File(picAddress));
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
